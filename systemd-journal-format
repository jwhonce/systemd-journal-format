#!/usr/bin/python3
# -*- coding: utf-8 -*-

"""Tool to convert journalctl --output verbose to journalctl --output export

Use case:
  As a developer, I want to query the docker logging from a given set of sosreport artifacts


Usage:
  $ cat journalctl_--all_--this-boot_--no-pager_-o_verbose.txt | systemd-journal-reformat >journal.export
  $ cat journal.export | /usr/lib/systemd/systemd-journal-remote -o pmaddocks.journal -
  $ journalctl -D , -u docker.service

Bugs:
      - Most exceptions not related to reading from stdin will cause script to fail.
"""

import re
import sys


class Renderer(object):
    def __init__(self, input=None, output=None):
        self.input = input if input else sys.stdin
        self.output = output if output else sys.stdout

    def run(self):
        entry = {}
        try:
            for line in self.input:
                if line.startswith('--'):
                    # skip comments
                    continue
                elif line.startswith(' ' * 4):
                    # process keyword=value, make changes as needed
                    key, value = line.strip().split('=', 1)
                    if key == '_SOURCE_REALTIME_TIMESTAMP':
                        entry['__REALTIME_TIMESTAMP'] = value
                    elif key == '_SOURCE_MONOTONIC_TIMESTAMP':
                        key = '__MONOTONIC_TIMESTAMP'
                    entry[key] = value
                else:
                    # Found start of new entry, flush previous if any
                    if entry:
                        for k, v in entry.items():
                            print('{}={}'.format(k, v), file=self.output)
                        print('', file=self.output)
                        entry = {}
                    cursor = "{};p=system.journal".format(re.search('.*\[(.*)\]', line).group(1))
                    entry['__CURSOR'] = cursor
        except (KeyboardInterrupt, BrokenPipeError):
            pass


if __name__ == '__main__':
    Renderer().run()
